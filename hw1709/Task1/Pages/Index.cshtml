@page
@model Task1.Pages.IndexModel
@{
    ViewData["Title"] = "Orders";
}

<h1 class="text-3xl font-bold mb-6">Orders</h1>

<form method="get" class="mb-4 flex gap-2">
    <input type="text" name="SearchName" value="@Model.SearchName"
           placeholder="Search by customer"
           class="border p-2 rounded w-64" />
    <button type="submit" class="bg-blue-600 px-4 py-2 rounded">Search</button>
</form>

<a asp-page="./Index" asp-route-SortOrder="date_desc" class="text-blue-500">Sort by Date ↓</a> |
<a asp-page="./Index" asp-route-SortOrder="" class="text-blue-500">Sort by Date ↑</a>

<table class="w-full border mt-4">
    <thead>
        <tr class="bg-gray-200">
            <th class="p-2 text-left">Id</th>
            <th class="p-2 text-left">Date</th>
            <th class="p-2 text-left">Customer</th>
            <th class="p-2 text-left">Products</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model.Orders)
        {
            <tr class="border-t">
                <td class="p-2">@order.Id</td>
                <td class="p-2">@order.OrderDate.ToShortDateString()</td>
                <td class="p-2">@order.CustomerName</td>
                <td class="p-2">
                    <ul>
                        @foreach (var op in order.OrderProducts)
                        {
                            <li>@($"{op.Product.Title} (x{op.Quantity})")</li>
                        }
                    </ul>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.TotalPages > 1)
{
    <div class="mt-4 flex gap-2">
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <a asp-page="./Index"
               asp-route-PageIndex="@i"
               asp-route-SearchName="@Model.SearchName"
               asp-route-SortOrder="@Model.SortOrder"
               class="px-3 py-1 border rounded @(i == Model.PageIndex ? "bg-blue-600 text-black" : "")">
                @i
            </a>
        }
    </div>
}